
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABRE_PARENTESES ATRIBUICAO CHAR COND_ELSE COND_ELSE COND_IF COND_IF DIFERENTE DIVISAO E ENTRADA ENTRADA FECHA_PARENTESES FIM FIM FLOAT IGUAL INICIO INICIO INT MAIOR MAIOR_IGUAL MENOR MENOR_IGUAL MULTIPLICACAO NEGACAO OU PONTO PONTO_VIRGULA REP_DURING REP_DURING REP_THROUGH REP_THROUGH RESTO SAIDA SAIDA SOMA SUBTRACAO TIPO_CHAR TIPO_CHAR TIPO_FLOAT TIPO_FLOAT TIPO_INT TIPO_INT VARIAVEL VIRGULAprogram : INICIO statement_list FIMtype_specifier : TIPO_INT\n                      | TIPO_FLOAT\n                      | TIPO_CHARstatement_list : statement\n                      | statement_list statementstatement : assignment\n                 | input\n                 | output\n                 | if_statement\n                 | while_statement\n                 | for_statementassignment : VARIAVEL ATRIBUICAO expression PONTO_VIRGULAinput : ENTRADA ABRE_PARENTESES VARIAVEL FECHA_PARENTESES PONTO_VIRGULAoutput : SAIDA ABRE_PARENTESES output_list FECHA_PARENTESES PONTO_VIRGULAoutput_list : expression\n                   | output_list VIRGULA expressionexpression : term\n                  | expression SOMA term\n                  | expression SUBTRACAO termterm : factor\n            | term MULTIPLICACAO factor\n            | term DIVISAO factorfactor : INT\n              | FLOAT\n              | CHAR\n              | VARIAVEL\n              | ABRE_PARENTESES expression FECHA_PARENTESESif_statement : COND_IF ABRE_PARENTESES expression FECHA_PARENTESES INICIO statement_list FIM\n                    | COND_IF ABRE_PARENTESES expression FECHA_PARENTESES INICIO statement_list FIM COND_ELSE INICIO statement_list FIMwhile_statement : REP_DURING ABRE_PARENTESES expression FECHA_PARENTESES INICIO statement_list FIMfor_statement : REP_THROUGH ABRE_PARENTESES VARIAVEL PONTO_VIRGULA expression PONTO_VIRGULA expression FECHA_PARENTESES INICIO statement_list FIM'
    
_lr_action_items = {'INICIO':([0,48,49,68,69,],[2,59,60,70,71,]),'$end':([1,17,],[0,-1,]),'VARIAVEL':([2,3,4,5,6,7,8,9,10,18,19,20,21,22,23,24,32,39,40,41,42,43,47,50,56,57,59,60,62,63,64,65,66,70,71,72,73,74,75,],[11,11,-5,-7,-8,-9,-10,-11,-12,-6,25,33,25,25,25,38,25,-13,25,25,25,25,25,25,-14,-15,11,11,11,11,25,-29,-31,11,11,11,11,-30,-32,]),'ENTRADA':([2,3,4,5,6,7,8,9,10,18,39,56,57,59,60,62,63,65,66,70,71,72,73,74,75,],[12,12,-5,-7,-8,-9,-10,-11,-12,-6,-13,-14,-15,12,12,12,12,-29,-31,12,12,12,12,-30,-32,]),'SAIDA':([2,3,4,5,6,7,8,9,10,18,39,56,57,59,60,62,63,65,66,70,71,72,73,74,75,],[13,13,-5,-7,-8,-9,-10,-11,-12,-6,-13,-14,-15,13,13,13,13,-29,-31,13,13,13,13,-30,-32,]),'COND_IF':([2,3,4,5,6,7,8,9,10,18,39,56,57,59,60,62,63,65,66,70,71,72,73,74,75,],[14,14,-5,-7,-8,-9,-10,-11,-12,-6,-13,-14,-15,14,14,14,14,-29,-31,14,14,14,14,-30,-32,]),'REP_DURING':([2,3,4,5,6,7,8,9,10,18,39,56,57,59,60,62,63,65,66,70,71,72,73,74,75,],[15,15,-5,-7,-8,-9,-10,-11,-12,-6,-13,-14,-15,15,15,15,15,-29,-31,15,15,15,15,-30,-32,]),'REP_THROUGH':([2,3,4,5,6,7,8,9,10,18,39,56,57,59,60,62,63,65,66,70,71,72,73,74,75,],[16,16,-5,-7,-8,-9,-10,-11,-12,-6,-13,-14,-15,16,16,16,16,-29,-31,16,16,16,16,-30,-32,]),'FIM':([3,4,5,6,7,8,9,10,18,39,56,57,62,63,65,66,72,73,74,75,],[17,-5,-7,-8,-9,-10,-11,-12,-6,-13,-14,-15,65,66,-29,-31,74,75,-30,-32,]),'ATRIBUICAO':([11,],[19,]),'ABRE_PARENTESES':([12,13,14,15,16,19,21,22,23,32,40,41,42,43,47,50,64,],[20,21,22,23,24,32,32,32,32,32,32,32,32,32,32,32,32,]),'INT':([19,21,22,23,32,40,41,42,43,47,50,64,],[29,29,29,29,29,29,29,29,29,29,29,29,]),'FLOAT':([19,21,22,23,32,40,41,42,43,47,50,64,],[30,30,30,30,30,30,30,30,30,30,30,30,]),'CHAR':([19,21,22,23,32,40,41,42,43,47,50,64,],[31,31,31,31,31,31,31,31,31,31,31,31,]),'MULTIPLICACAO':([25,27,28,29,30,31,51,52,53,54,55,],[-27,42,-21,-24,-25,-26,42,42,-22,-23,-28,]),'DIVISAO':([25,27,28,29,30,31,51,52,53,54,55,],[-27,43,-21,-24,-25,-26,43,43,-22,-23,-28,]),'PONTO_VIRGULA':([25,26,27,28,29,30,31,38,45,46,51,52,53,54,55,61,],[-27,39,-18,-21,-24,-25,-26,50,56,57,-19,-20,-22,-23,-28,64,]),'SOMA':([25,26,27,28,29,30,31,35,36,37,44,51,52,53,54,55,58,61,67,],[-27,40,-18,-21,-24,-25,-26,40,40,40,40,-19,-20,-22,-23,-28,40,40,40,]),'SUBTRACAO':([25,26,27,28,29,30,31,35,36,37,44,51,52,53,54,55,58,61,67,],[-27,41,-18,-21,-24,-25,-26,41,41,41,41,-19,-20,-22,-23,-28,41,41,41,]),'FECHA_PARENTESES':([25,27,28,29,30,31,33,34,35,36,37,44,51,52,53,54,55,58,67,],[-27,-18,-21,-24,-25,-26,45,46,-16,48,49,55,-19,-20,-22,-23,-28,-17,69,]),'VIRGULA':([25,27,28,29,30,31,34,35,51,52,53,54,55,58,],[-27,-18,-21,-24,-25,-26,47,-16,-19,-20,-22,-23,-28,-17,]),'COND_ELSE':([65,],[68,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([2,59,60,70,71,],[3,62,63,72,73,]),'statement':([2,3,59,60,62,63,70,71,72,73,],[4,18,4,4,18,18,4,4,18,18,]),'assignment':([2,3,59,60,62,63,70,71,72,73,],[5,5,5,5,5,5,5,5,5,5,]),'input':([2,3,59,60,62,63,70,71,72,73,],[6,6,6,6,6,6,6,6,6,6,]),'output':([2,3,59,60,62,63,70,71,72,73,],[7,7,7,7,7,7,7,7,7,7,]),'if_statement':([2,3,59,60,62,63,70,71,72,73,],[8,8,8,8,8,8,8,8,8,8,]),'while_statement':([2,3,59,60,62,63,70,71,72,73,],[9,9,9,9,9,9,9,9,9,9,]),'for_statement':([2,3,59,60,62,63,70,71,72,73,],[10,10,10,10,10,10,10,10,10,10,]),'expression':([19,21,22,23,32,47,50,64,],[26,35,36,37,44,58,61,67,]),'term':([19,21,22,23,32,40,41,47,50,64,],[27,27,27,27,27,51,52,27,27,27,]),'factor':([19,21,22,23,32,40,41,42,43,47,50,64,],[28,28,28,28,28,28,28,53,54,28,28,28,]),'output_list':([21,],[34,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> INICIO statement_list FIM','program',3,'p_program','parser.py',7),
  ('type_specifier -> TIPO_INT','type_specifier',1,'p_type_specifier','parser.py',11),
  ('type_specifier -> TIPO_FLOAT','type_specifier',1,'p_type_specifier','parser.py',12),
  ('type_specifier -> TIPO_CHAR','type_specifier',1,'p_type_specifier','parser.py',13),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',17),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',18),
  ('statement -> assignment','statement',1,'p_statement','parser.py',25),
  ('statement -> input','statement',1,'p_statement','parser.py',26),
  ('statement -> output','statement',1,'p_statement','parser.py',27),
  ('statement -> if_statement','statement',1,'p_statement','parser.py',28),
  ('statement -> while_statement','statement',1,'p_statement','parser.py',29),
  ('statement -> for_statement','statement',1,'p_statement','parser.py',30),
  ('assignment -> VARIAVEL ATRIBUICAO expression PONTO_VIRGULA','assignment',4,'p_assignment','parser.py',34),
  ('input -> ENTRADA ABRE_PARENTESES VARIAVEL FECHA_PARENTESES PONTO_VIRGULA','input',5,'p_input','parser.py',38),
  ('output -> SAIDA ABRE_PARENTESES output_list FECHA_PARENTESES PONTO_VIRGULA','output',5,'p_output','parser.py',42),
  ('output_list -> expression','output_list',1,'p_output_list','parser.py',46),
  ('output_list -> output_list VIRGULA expression','output_list',3,'p_output_list','parser.py',47),
  ('expression -> term','expression',1,'p_expression','parser.py',54),
  ('expression -> expression SOMA term','expression',3,'p_expression','parser.py',55),
  ('expression -> expression SUBTRACAO term','expression',3,'p_expression','parser.py',56),
  ('term -> factor','term',1,'p_term','parser.py',63),
  ('term -> term MULTIPLICACAO factor','term',3,'p_term','parser.py',64),
  ('term -> term DIVISAO factor','term',3,'p_term','parser.py',65),
  ('factor -> INT','factor',1,'p_factor','parser.py',72),
  ('factor -> FLOAT','factor',1,'p_factor','parser.py',73),
  ('factor -> CHAR','factor',1,'p_factor','parser.py',74),
  ('factor -> VARIAVEL','factor',1,'p_factor','parser.py',75),
  ('factor -> ABRE_PARENTESES expression FECHA_PARENTESES','factor',3,'p_factor','parser.py',76),
  ('if_statement -> COND_IF ABRE_PARENTESES expression FECHA_PARENTESES INICIO statement_list FIM','if_statement',7,'p_if_statement','parser.py',83),
  ('if_statement -> COND_IF ABRE_PARENTESES expression FECHA_PARENTESES INICIO statement_list FIM COND_ELSE INICIO statement_list FIM','if_statement',11,'p_if_statement','parser.py',84),
  ('while_statement -> REP_DURING ABRE_PARENTESES expression FECHA_PARENTESES INICIO statement_list FIM','while_statement',7,'p_while_statement','parser.py',91),
  ('for_statement -> REP_THROUGH ABRE_PARENTESES VARIAVEL PONTO_VIRGULA expression PONTO_VIRGULA expression FECHA_PARENTESES INICIO statement_list FIM','for_statement',11,'p_for_statement','parser.py',95),
]
